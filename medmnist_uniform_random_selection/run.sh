#for init in imagenet; do for run in {1..20}; do for task in pathmnist; do for partial in $(seq 1.00000 0.00005 1.00000); do while true; do if [ $(myjobs | wc -l) -lt 999 ]; then if [ ! -f logs/$task-$run-p$partial.out ]; then sbatch --error=logs/$task-$run-p$partial.out --output=logs/$task-$run-p$partial.out hg.sh $run $task $partial $init; echo "logs/$task-$run-p$partial.out"; break; else line="$(tail -n 1 logs/$task-$run-p$partial.out)"; if [[ "$line" != *"AVERAGE"* ]] && [[ "$line" != *"reraise"* ]] && [[ "$line" != *"Sample larger than population"* ]]; then sbatch --error=logs/$task-$run-p$partial.out --output=logs/$task-$run-p$partial.out hg.sh $run $task $partial $init; echo "logs/$task-$run-p$partial.out"; break; else break; fi; fi; fi; sleep 10s; done; done; done; done; done

#for init in imagenet; do for run in {1..20}; do for task in pathmnist; do for partial in $(seq 0.00015 0.00005 0.00095); do while true; do if [ $(myjobs | wc -l) -lt 999 ]; then if [ ! -f logs/$task-$run-p$partial.out ]; then sbatch --error=logs/$task-$run-p$partial.out --output=logs/$task-$run-p$partial.out hg.sh $run $task $partial $init; echo "logs/$task-$run-p$partial.out"; break; else line="$(tail -n 1 logs/$task-$run-p$partial.out)"; if [[ "$line" != *"AVERAGE"* ]] && [[ "$line" != *"reraise"* ]] && [[ "$line" != *"Sample larger than population"* ]]; then sbatch --error=logs/$task-$run-p$partial.out --output=logs/$task-$run-p$partial.out hg.sh $run $task $partial $init; echo "logs/$task-$run-p$partial.out"; break; else break; fi; fi; fi; sleep 10s; done; done; done; done; done

#for init in imagenet; do for run in {1..20}; do for task in pathmnist; do for partial in $(seq 0.00100 0.00050 0.00950); do while true; do if [ $(myjobs | wc -l) -lt 999 ]; then if [ ! -f logs/$task-$run-p$partial.out ]; then sbatch --error=logs/$task-$run-p$partial.out --output=logs/$task-$run-p$partial.out hg.sh $run $task $partial $init; echo "logs/$task-$run-p$partial.out"; break; else line="$(tail -n 1 logs/$task-$run-p$partial.out)"; if [[ "$line" != *"AVERAGE"* ]] && [[ "$line" != *"reraise"* ]] && [[ "$line" != *"Sample larger than population"* ]]; then sbatch --error=logs/$task-$run-p$partial.out --output=logs/$task-$run-p$partial.out hg.sh $run $task $partial $init; echo "logs/$task-$run-p$partial.out"; break; else break; fi; fi; fi; sleep 10s; done; done; done; done; done

#for init in imagenet; do for run in {1..20}; do for task in pathmnist; do for partial in $(seq 0.01000 0.00500 0.09500); do while true; do if [ $(myjobs | wc -l) -lt 999 ]; then if [ ! -f logs/$task-$run-p$partial.out ]; then sbatch --error=logs/$task-$run-p$partial.out --output=logs/$task-$run-p$partial.out hg.sh $run $task $partial $init; echo "logs/$task-$run-p$partial.out"; break; else line="$(tail -n 1 logs/$task-$run-p$partial.out)"; if [[ "$line" != *"AVERAGE"* ]] && [[ "$line" != *"reraise"* ]] && [[ "$line" != *"Sample larger than population"* ]]; then sbatch --error=logs/$task-$run-p$partial.out --output=logs/$task-$run-p$partial.out hg.sh $run $task $partial $init; echo "logs/$task-$run-p$partial.out"; break; else break; fi; fi; fi; sleep 10s; done; done; done; done; done

#for init in imagenet; do for run in {1..20}; do for task in pathmnist; do for partial in $(seq 0.10000 0.05000 0.95000); do while true; do if [ $(myjobs | wc -l) -lt 999 ]; then if [ ! -f logs/$task-$run-p$partial.out ]; then sbatch --error=logs/$task-$run-p$partial.out --output=logs/$task-$run-p$partial.out hg.sh $run $task $partial $init; echo "logs/$task-$run-p$partial.out"; break; else line="$(tail -n 1 logs/$task-$run-p$partial.out)"; if [[ "$line" != *"AVERAGE"* ]] && [[ "$line" != *"reraise"* ]] && [[ "$line" != *"Sample larger than population"* ]]; then sbatch --error=logs/$task-$run-p$partial.out --output=logs/$task-$run-p$partial.out hg.sh $run $task $partial $init; echo "logs/$task-$run-p$partial.out"; break; else break; fi; fi; fi; sleep 10s; done; done; done; done; done


MNIST_NAME=( pathmnist )

for init in imagenet; do for run in {1..50}; do for task in "${MNIST_NAME[@]}"; do for partial in $(seq 1.00000 0.00005 1.00000) $(seq 0.00015 0.00005 0.00095) $(seq 0.00100 0.00050 0.00950) $(seq 0.01000 0.00500 0.09500) $(seq 0.10000 0.05000 0.95000); do while true; do if [ $(myjobs | wc -l) -lt 999 ]; then if [ ! -f logs/$task-$run-p$partial.out ]; then sbatch --error=logs/$task-$run-p$partial.out --output=logs/$task-$run-p$partial.out hg.sh $run $task $partial $init; echo "logs/$task-$run-p$partial.out"; break; else line="$(tail -n 1 logs/$task-$run-p$partial.out)"; if [[ "$line" != *"AVERAGE"* ]] && [[ "$line" != *"reraise"* ]]; then sbatch --error=logs/$task-$run-p$partial.out --output=logs/$task-$run-p$partial.out hg.sh $run $task $partial $init; echo "logs/$task-$run-p$partial.out"; break; else break; fi; fi; fi; sleep 10s; done; done; done; done; done
